clear all
close all
addpath(genpath(pwd))

%% Getting and setting
%   1. Each subclass of BaseObject class has its own get and set. 
%   2. 'get' requires property(string). Location can be provided as an
%      additional first input.
%   3. getting from multiple locations: output is either array, object
%      array or cell array
%   3. 'set' requires property(string) and value. Location can be provided
%      as an additional first input. For multiple locations, multiple 
%      values are required.
%   4. The string ':' can be passed as the location input, meaning all
%      elements of the array.
%   5. BaseObject does not have a constructor - it will only be created when
%      mixed types are put in one array. Thus, its 'get' and 'set' require
%      location to be given explicitly.
%   6. Since BaseObject is a direct subclass of matlab.mixin.Heterogeneous,
%      its methods must be sealed and cannot be redefined in subclasses.
%      The suffix 'Het' is added to avoid naming clashes with subclasses.

%trajectories
t1 = Trajectory('R3xSO3','continuous',@ConstantLinearVelocity);
t2 = Trajectory('R3','discrete',0:0.1:1,rand(3,10));

%create geometric object
geoObj = GeometricObject();
geoObj.set('index',1);
geoObj.set('trajectory',t1);
geoObj.set('parameters',pi);

%create rigid body object
rbObj = RigidBodyObject();
rbObj.set('index',2);
rbObj.set('trajectory',t1);

%create point
pt = Point();
pt.set('index',3);
pt.set('trajectory',t2);

%geometric object array
geoObjArr = [geoObj.copy() geoObj.copy()]; %pass by reference, need to copy like this
geoObjArr.get(':','index')
geoObjArr.set(1,'index',10);
geoObjArr.get([1 2],'index')
geoObjArr.get(':','trajectory')

%base array
baseObjArr = [geoObj.copy() rbObj.copy() pt.copy()]; %pass by reference, need to copy like this

%get and set environment array
baseObjArr.getHet([1 2 3],'index')
baseObjArr.setHet([2 1],'index',[200 100]);
baseObjArr.getHet(':','index')
